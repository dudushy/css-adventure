@import "/src/styles.scss";

:host {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
  color: $dark;
}

.pageContent {
  min-height: var(--defaultContentHeight);
  padding: 1%;
  width: 100%;
  // max-width: 1200px;
  font-size: calc(var(--responsiveUnit) * 0.8);
}

.cards {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;

  .card {
    --cardColor: #999999;
    --cardColorSelected: #000000;
    --cardText: #f4f5f8;
    --cardTextSelected: #131313;

    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    @include fixedHeight(calc(var(--responsiveUnit) * 10));
    @include fixedWidth(calc(var(--responsiveUnit) * 13));
    margin: calc(var(--responsiveUnit) * 1);
    border-radius: calc(var(--responsiveUnit) * 1);
    border: calc(var(--responsiveUnit) * 0.1) solid $medium;
    border-color: var(--cardColor);
    background: var(--cardColorSelected);
    color: var(--cardText);
    @include allVendors(box-shadow, 0 0 calc(var(--responsiveUnit) * 1) calc(var(--responsiveUnit) * 0.2) $black);
    @include allVendors(transition, all 300ms ease-in-out);

    &,
    * {
      @include allVendors(user-select, none);
    }

    &::after {
      content: "";
      position: absolute;
      top: 0;
      right: 0;
      transform: translate(40%, -40%);
      height: 50%;
      width: 50%;
      z-index: 1;
      border-radius: 50%;
      background: var(--cardColor);
      @include allVendors(transition, all 300ms ease-in-out);
    }

    &:hover {
      transform: translateY(calc(var(--responsiveUnit) * -0.5));
      @include allVendors(
        box-shadow,
        0 0 calc(var(--responsiveUnit) * 1) calc(var(--responsiveUnit) * 0.2) var(--cardColorSelected)
      );
      cursor: pointer;
      color: var(--cardTextSelected);

      &::after {
        transform: none;
        height: 100%;
        width: 100%;
        border-radius: 0;
      }

      .cardInfo {
        .cardTitle,
        .cardDescription {
          color: var(--cardTextSelected);
          @include allVendors(transition, all 300ms ease-in-out);
        }

        .cardType {
          p {
            background: var(--cardColorSelected);
            color: var(--cardText);
            @include allVendors(transition, all 300ms ease-in-out);
          }
        }
      }
    }

    &:active {
      transform: translateY(calc(var(--responsiveUnit) * -0.5)) scale(0.95);
    }

    .cardInfo {
      z-index: 2;
      height: 95%;
      width: 95%;
      position: relative;
      display: flex;
      justify-content: flex-start;
      flex-direction: column;
      align-items: flex-start;

      .cardTitle,
      .cardDescription,
      .cardType {
        color: var(--cardText);
        width: 100%;
        display: flex;
        align-items: center;
        justify-content: flex-start;

        p {
          margin: 0;
          padding: 0;
          text-align: left;
          margin-left: calc(var(--responsiveUnit) * 0.3);
        }
      }

      .cardTitle {
        // background: green;
        align-items: flex-start;
        width: 70%;
        margin-top: 5%;
        height: 30%;
        font-size: calc(var(--responsiveUnit) * 1.3);
        font-weight: bolder;

        @include portrait {
          font-size: calc(var(--responsiveUnit) * 1.3);
        }
      }

      .cardDescription {
        // background: blue;
        align-items: flex-end;
        height: 40%;
        font-size: calc(var(--responsiveUnit) * 0.9);
        font-family: sans-serif;

        @include portrait {
          font-size: calc(var(--responsiveUnit) * 1);
        }
      }

      .cardType {
        // background: yellow;
        width: 75%;
        height: 25%;
        font-size: calc(var(--responsiveUnit) * 0.8);

        @include portrait {
          font-size: calc(var(--responsiveUnit) * 0.9);
        }

        p {
          background: var(--cardColor);
          color: var(--cardTextSelected);
          padding: calc(var(--responsiveUnit) * 0.2);
          border-radius: calc(var(--responsiveUnit) * 0.5);
        }
      }

      .cardNo {
        // background: red;
        color: var(--cardTextSelected);
        position: absolute;
        top: -10%;
        right: 2%;
        text-align: right;
        font-size: calc(var(--responsiveUnit) * 1.2);
      }

      .cardWarning {
        display: flex;
        align-items: center;
        justify-content: center;
        background: $black;
        border-radius: 50%;
        padding: calc(var(--responsiveUnit) * 0.5);
        color: $warning;
        position: absolute;
        bottom: 2%;
        right: 0%;
        font-size: calc(var(--responsiveUnit) * 1.1);
      }
    }

    &[type="form"] {
      --cardColor: #5cd67d;
      --cardColorSelected: #99deab;
      --cardText: #222428;
      --cardTextSelected: #222428;
    }

    &[type="loader"] {
      --cardColor: #83bbcc;
      --cardColorSelected: #a3c4cf;
      --cardText: #222428;
      --cardTextSelected: #222428;
    }

    &[type="interactive"] {
      --cardColor: #9179ba;
      --cardColorSelected: #a797c2;
      --cardText: #f4f5f8;
      --cardTextSelected: #f4f5f8;
    }

    &[type="random"] {
      --cardColor: #c67ecc;
      --cardColorSelected: #d7abdb;
      --cardText: #222428;
      --cardTextSelected: #f4f5f8;
    }

    &[type="game"] {
      --cardColor: #f2b66d;
      --cardColorSelected: #f2cb9b;
      --cardText: #222428;
      --cardTextSelected: #222428;
    }

    &[type="clone"] {
      --cardColor: #202020;
      --cardColorSelected: #090909;
      --cardText: #f4f5f8;
      --cardTextSelected: #f4f5f8;
    }
  }
}
